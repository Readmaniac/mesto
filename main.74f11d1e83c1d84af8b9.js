(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){var n=e.data,r=e.template,o=e.userId,i=e.handleCardClick,a=e.handleCardDelete,c=e.handleSetLike,u=e.handleRemoveLike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._data=n,this._cardId=n._id,this._userId=o,this._cardOwnerId=n.owner._id,this._template=r,this._name=n.name,this._link=n.link,this._handleCardClick=i,this._handleCardDelete=a,this._handleSetLike=c,this._handleRemoveLike=u,this._likes=n.likes}var n,r;return n=t,(r=[{key:"createNewCard",value:function(){return this._cardElement=this._getTemplate(),this._cardTitle=this._cardElement.querySelector(".elements__name"),this._cardTitle.textContent=this._name,this._cardImage=this._cardElement.querySelector(".elements__image"),this._buttonLike=this._cardElement.querySelector(".elements__likes-btn"),this._likesNumber=this._cardElement.querySelector(".elements__likes-number"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._buttonDelete=this._cardElement.querySelector(".elements__delete"),this._isLikedByUser=this._hasUserLike(),this._isCardLiked(),this._setDeleteBtn(),this._likesNumber.textContent=this._likes.length,this._setsEventListeners(),this._cardElement}},{key:"_getTemplate",value:function(){return document.querySelector(this._template).content.querySelector(".elements__container").cloneNode(!0)}},{key:"deleteCard",value:function(){this._cardElement.remove(),this._cardElement=null}},{key:"_setsEventListeners",value:function(){var e=this;this._buttonDelete.addEventListener("click",(function(){e._handleCardDelete(e._cardId)})),this._cardImage.addEventListener("click",(function(){e._handleCardClick()})),this._buttonLike.addEventListener("click",(function(){e._buttonLike.classList.contains("elements__likes_active")?e._handleRemoveLike(e._cardId):e._handleSetLike(e._cardId)}))}},{key:"handleLikeCard",value:function(e){this._buttonLike.classList.toggle("elements__likes_active"),this._likes=e.likes,this._likesNumber.textContent=this._likes.length}},{key:"_isCardLiked",value:function(){this._isLikedByUser&&this._buttonLike.classList.add("elements__likes_active")}},{key:"_hasUserLike",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._userId}))}},{key:"_setDeleteBtn",value:function(){this._userId!==this._cardOwnerId&&this._buttonDelete.remove()}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var o=function(){function e(t,n){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r(this,"_setEventListeners",(function(){o._formFields.forEach((function(e){e.addEventListener("input",(function(){var t=e;o._checkFormValidity(),o._checkFieldValidity(t,o._findFieldError(e),o._formsConfig.inputErrorClass)}))}))})),r(this,"_checkFormValidity",(function(){var e=o._formFields.every((function(e){return e.validity.valid}));return o._toggleSubmitButton({disable:e}),e})),r(this,"_checkFieldValidity",(function(e,t,n){t.textContent=e.validationMessage,e.valid?e.classList.remove(n):e.classList.add(n)})),r(this,"_toggleSubmitButton",(function(e){var t=e.disable;o._buttonSubmitForm.disabled=!t})),this._formsConfig=n,this._formElement=t,this._inputList=this._formElement.querySelectorAll(this._formsConfig.inputSelector),this._buttonSubmitForm=this._formElement.querySelector(this._formsConfig.submitButtonSelector),this._formFields=Array.from(this._formElement.querySelectorAll(this._formsConfig.inputSelector))}var t,o;return t=e,(o=[{key:"enableValidation",value:function(){this._toggleSubmitButton({disable:!1}),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this._toggleSubmitButton({disable:!1}),this._inputList.forEach((function(t){e._hideError(t)}))}},{key:"_findFieldError",value:function(e){return this._formElement.querySelector("".concat(this._formsConfig.errorClass).concat(e.name))}},{key:"_hideError",value:function(e){this._findFieldError(e).textContent=""}}])&&n(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._container=document.querySelector(t),this._renderer=n}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItem",value:function(e){this._renderer(e)}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target.classList.contains("overlay")||t.target.classList.contains("popup__close-icon"))&&e.close()}))}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=h(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function h(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=y(e)););return e}function p(e,t){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},p(e,t)}function d(e,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function y(e){return y=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},y(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&p(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._pictureImage=t._popup.querySelector(".picture__image"),t._pictureName=t._popup.querySelector(".picture__name"),t}return t=a,(n=[{key:"open",value:function(e,t){this._pictureImage.src=t,this._pictureName.textContent=e,this._pictureImage.alt=e,f(y(a.prototype),"open",this).call(this)}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},v.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function k(e,t){return k=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},k(e,t)}function S(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._handleFormSubmit=r,t._form=t._popup.querySelector(".form"),t._inputList=t._form.querySelectorAll(".form__input"),t._btnSubmit=t._form.querySelector(".form__save"),t._btnSubmitText=t._btnSubmit.textContent,t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;v(w(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"close",value:function(){this._form.reset(),v(w(a.prototype),"close",this).call(this)}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"toggleSubmitButtonText",value:function(e){this._btnSubmit.textContent=e}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=j(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},L.apply(this,arguments)}function j(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}function P(e,t){return P=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},P(e,t)}function I(e,t){if(t&&("object"===O(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&P(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._form=t._popup.querySelector(".popup__form"),t}return t=a,(n=[{key:"setSubmitCallback",value:function(e){this._handleSubmit=e}},{key:"setEventListeners",value:function(){var e=this;L(T(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("click",(function(t){t.preventDefault(),e._handleSubmit()}))}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function F(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var q=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameField=document.querySelector(t),this._jobField=document.querySelector(n),this._avatarField=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameField.textContent,link:this._jobField.textContent,avatar:this._avatarField.src}}},{key:"setUserInfo",value:function(e){this._nameField.textContent=e.name,this._jobField.textContent=e.about,this._avatarField.src=e.avatar}},{key:"setAvatar",value:function(e){this._avatarField.src=e.avatar}}])&&F(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function B(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}var A=new WeakSet,D=function(){function e(t){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(n=this,r=A),r.add(n),this._url=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"addCard",value:function(e){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(B(this,A,U))}},{key:"getAllCards",value:function(){return fetch("".concat(this._url,"/cards"),{method:"GET",headers:this._headers}).then(B(this,A,U))}},{key:"removeCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(B(this,A,U))}},{key:"getUsersInfo",value:function(){var e=this;return fetch("".concat(this._url,"/users/me"),{method:"GET",headers:this._headers}).then((function(t){return B(e,A,U).call(e,t)}))}},{key:"editUserInfo",value:function(e){var t=this;return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.link})}).then((function(e){return B(t,A,U).call(t,e)}))}},{key:"editUserAvatar",value:function(e){var t=this;return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.link})}).then((function(e){return B(t,A,U).call(t,e)}))}},{key:"setLike",value:function(e){var t=this;return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then((function(e){return B(t,A,U).call(t,e)}))}},{key:"removeLike",value:function(e){var t=this;return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then((function(e){return B(t,A,U).call(t,e)}))}}])&&x(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function U(e){return e.ok?e.json():Promise.reject({message:"Ошибка на стороне сервера",res:e})}var V=document.querySelector(".profile__edit-button"),N=".delete-card",J=document.querySelector(".profile__add-elements"),z=document.querySelector(".profile__btn"),G="Сохранить",H="Сохранение...",M=(document.querySelector(N),{});function W(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var $=new D({url:"https://nomoreparties.co/v1/cohort-54",headers:{"Content-Type":"application/json",authorization:"7ad4b367-9863-4a09-9138-d86794effb54"}}),K=null;Promise.all([$.getAllCards(),$.getUsersInfo()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return W(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?W(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];K=i._id,ne.setUserInfo(i),o.reverse().forEach((function(e){te.renderItem(e)}))})).catch((function(e){console.log("Ошибка: ".concat(e))}));var Q=new E({popupSelector:".popup-profile",handleFormSubmit:function(e){Q.toggleSubmitButtonText(H),$.editUserInfo(e).then((function(e){ne.setUserInfo(e),Q.close()})).catch((function(e){console.log("Ошибка: ".concat(e))})).finally((function(){Q.toggleSubmitButtonText(G)}))}});Q.setEventListeners();var X=new E({popupSelector:".popup-avatar",handleFormSubmit:function(e){X.toggleSubmitButtonText(H),$.editUserAvatar(e).then((function(e){ne.setAvatar(e),X.close()})).catch((function(e){console.log("Ошибка: ".concat(e))})).finally((function(){X.toggleSubmitButtonText(G)}))}});X.setEventListeners();var Y=new E({popupSelector:".popup-card",handleFormSubmit:function(e){Y.toggleSubmitButtonText(H),$.addCard(e).then((function(e){Y.close(),te.renderItem(e)})).catch((function(e){console.log("Ошибка: ".concat(e))})).finally((function(){Y.toggleSubmitButtonText("Создать")}))}});Y.setEventListeners();var Z=new _(".picture");Z.setEventListeners();var ee,te=new a(".elements",(function(e){var n,r;te.addItem((r=new t({data:n=e,template:"#element-template",userId:K,handleCardClick:function(){Z.open(n.name,n.link)},handleCardDelete:function(e){re.open(),re.setSubmitCallback((function(){$.removeCard(e).then((function(){re.close(),r.deleteCard()})).catch((function(e){console.log("Ошибка: ".concat(e))}))}))},handleSetLike:function(e){$.setLike(e).then((function(e){r.handleLikeCard(e)})).catch((function(e){console.log("Ошибка: ".concat(e))}))},handleRemoveLike:function(e){$.removeLike(e).then((function(e){r.handleLikeCard(e)})).catch((function(e){console.log("Ошибка: ".concat(e))}))}})).createNewCard())})),ne=new q(".profile__title",".profile__subtitle",".profile__avatar"),re=new R(N);re.setEventListeners(),V.addEventListener("click",(function(){var e=ne.getUserInfo();Q.setInputValues(e),Q.open(),M.profile.resetValidation()})),J.addEventListener("click",(function(){M.place.resetValidation(),Y.open()})),z.addEventListener("click",(function(){X.open()})),ee={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__save",inputErrorClass:".form__item-input_invalid",errorClass:".form__item-error_field_",submitForm:".form__save"},Array.from(document.querySelectorAll(ee.formSelector)).forEach((function(e){var t=new o(e,ee),n=e.getAttribute("name");M[n]=t,t.enableValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,